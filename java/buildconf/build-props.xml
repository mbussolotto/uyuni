<project name="build-props">
  <property name="rhn-home" location="." />

  <property name="src.dir" location="${rhn-home}/code" />
  <property name="java.lib.dir" value="/usr/share/java"/>
  <property name="build.dir" location="${rhn-home}/build" />
  <property name="lib.dir" location="${rhn-home}/lib" />
  <property name="build.lib.dir" location="${build.dir}/build-lib" />

  <property name="run.lib.dir" location="${build.dir}/run-lib" />
  <property name="run-external.lib.dir" location="${build.dir}/run-lib/external" />
  <property name="test.lib.dir" location="${build.dir}/test-lib" />
  <property name="boot.lib.dir" location="${build.dir}/boot-lib" />
  <property name="report.dir" location="${build.dir}/reports" />
  <property name="taskomatic.link.dir" location="/usr/share/spacewalk/taskomatic" />

  <property name="log4j.threshold" value="warn" />
  <property name="halt-tests-on-failure" value="false" />
  <property name="checkstyle.header.file" value="${rhn-home}/buildconf/LICENSE.txt" />
  <property name="checkstyle.cache.src" value="${rhn-home}/build/checkstyle.cache.src" />
  <property name="checkstyle.cache.test" value="${rhn-home}/build/checkstyle.cache.test" />
  <property name="javadoc.lazy" value="false" />
  <property name="deprecation" value="off" />
  <property name="nowarn" value="!${deprecation}" />
  <property name="includehelp" value="true" />

  <!-- IVY Properties -->
  <property name="ivy.log.module.when.found" value="false"/>
  <property name="ivy.log.resolved.revision" value="false"/>
  <property name="ivy.dep.file" value="${rhn-home}/buildconf/ivy/ivy-suse.xml" />
  <property name="ivy.settings.file" value="${rhn-home}/buildconf/ivy/ivyconf.xml" />

  <!-- END IVY Properties -->

  <property name="rhn.war" value="${build.dir}/webapp/rhnjava.war"/>
  <property name="megajar.jar" value="${run.lib.dir}/rhn.jar" />
  <property name="testjar.jar" value="${run.lib.dir}/rhn-test.jar" />

  <!-- =================== jar dependencies ======================= -->
  <property name="commons-lang" value="commons-lang3"/>

  <available file="${java.lib.dir}/byte-buddy/byte-buddy.jar" property="byte-buddy" value="byte-buddy/byte-buddy.jar"/>

  <available file="${java.lib.dir}/byte-buddy/byte-buddy-dep.jar" property="byte-buddy-dep" value="byte-buddy/byte-buddy-dep.jar"/>

  <available file="${java.lib.dir}/hibernate-commons-annotations/hibernate-commons-annotations.jar" type="file"
	  property="hibernate-commons-annotations" value="hibernate-commons-annotations/hibernate-commons-annotations"/>

  <condition property="commons-validator" value="apache-commons-validator" else="commons-validator">
    <available file="${java.lib.dir}/apache-commons-validator.jar" />
  </condition>

  <condition property="commons-compress" value="apache-commons-compress" else="commons-compress">
    <available file="${java.lib.dir}/apache-commons-compress.jar" />
  </condition>

  <available file="${java.lib.dir}/log4j/log4j-core.jar" type="file" property="log4j-core" value="log4j/log4j-core" />
  <available file="${java.lib.dir}/log4j/log4j-api.jar" type="file" property="log4j-api" value="log4j/log4j-api" />
  <available file="${java.lib.dir}/log4j/log4j-jcl.jar" type="file" property="log4j-jcl" value="log4j/log4j-jcl" />
  <property name="log4j-jars" value="${log4j-core} ${log4j-api} ${log4j-jcl}"/>

  <condition property="javamail" value="javax.mail" else="javamail">
    <available file="${java.lib.dir}/javax.mail.jar" />
  </condition>

  <available file="${java.lib.dir}/apache-commons-jexl/commons-jexl.jar" type="file" property="commons-jexl" value="apache-commons-jexl/commons-jexl" />

  <available file="${java.lib.dir}/jcache.jar" type="file" property="jcache" value="jcache.jar" />

  <available file="${java.lib.dir}/jaxb/jaxb-runtime.jar" type="file" property="jaxb-runtime" value="jaxb/jaxb-runtime.jar" />

  <available file="${java.lib.dir}/jakarta-persistence-api.jar" type="file" property="jpa-api" value="jakarta-persistence-api.jar" />

  <available file="${java.lib.dir}/hibernate6/hibernate-core.jar" type="file" property="hibernate6files" value="hibernate6/hibernate-core hibernate6/hibernate-c3p0 hibernate6/hibernate-jcache" />

  <available file="${java.lib.dir}/objectweb-asm/asm.jar" type="file" property="asm" value="objectweb-asm/asm" />

  <property name="hibernate6deps" value="${hibernate6files} ${hibernate-commons-annotations} ${asm}  slf4j/api ${jcache} ${jpa-api} ${jaxb-runtime} ${byte-buddy} ${byte-buddy-dep} jboss-logging javassist log4j/log4j-slf4j-impl classmate/classmate statistics hypersistence-utils/hypersistence-utils-hibernate-63 jackson-databind jackson-core jackson-annotations"/>

  <property name="c3p0" value="c3p0"/>
  <available file="${java.lib.dir}/mchange-commons/mchange-commons-java.jar" type="file" property="c3p0" value="${c3p0} mchange-commons/mchange-commons-java"/>

  <condition property="jmock-jars"
                value="jmock jmock-cglib"
                 else="">
    <available file="${java.lib.dir}/jmock/jmock.jar" />
  </condition>

  <condition property="stringprep-jars"
                value="ongres-stringprep/saslprep ongres-stringprep/stringprep"
                 else="">
    <available file="${java.lib.dir}/ongres-stringprep/saslprep.jar"/>
  </condition>

  <available file="${java.lib.dir}/cglib/cglib.jar" type="file" property="cglib-jar" value="cglib/cglib" />
  <available file="${java.lib.dir}/cglib.jar" type="file" property="cglib-jar" value="cglib" />

  <property name="common.jar.dependencies"
      value="bcel ${cglib-jar} commons-beanutils commons-cli commons-codec
             commons-collections commons-digester commons-discovery
             commons-el commons-fileupload commons-io ${commons-lang} commons-logging ${commons-validator} ${hibernate6deps}
             ${commons-compress} ${javamail} smtp jdom ${jmock-jars}
             ${log4j-jars} oro redstone-xmlrpc-client redstone-xmlrpc ${struts-jars} ${tomcat-jars}
             bcprov bcpg postgresql-jdbc ongres-scram/client ongres-scram/common
             ${stringprep-jars} taglibs-standard-impl taglibs-standard-jstlel
             taglibs-standard-spec logdriver quartz slf4j-api log4j/log4j-slf4j-impl
             velocity-engine-core simple-core  mockobjects mockobjects-core mockobjects-jdk1.4-j2ee1.3 strutstest" />

  <!-- deps needed for testing, but required to build -->
  <property name="test.build.jar.dependencies" value="junit ${log4j-jars} regexp ${jmock-jars} postgresql-jdbc" />

  <property name="test.jar.dependencies"
      value="antlr checkstyle dom4j emma emma_ant jdom junit
             ${log4j-jars}
             regexp ${jmock-jars}
             postgresql-jdbc" />

  <condition property="ant-contrib.path" value="ant/ant-contrib" else="ant-contrib">
      <available file="${java.lib.dir}/ant/ant-contrib.jar"/>
  </condition>

  <property name="build.jar.dependencies"
      value="ant ant-junit ${ant-contrib.path} antlr  ${test.build.jar.dependencies}
      ${common.jar.dependencies} ${tomcat-jars} ${jasper-jars}
       xalan-j2" />

  <property name="run.jar.dependencies"
      value="antlr ${asm} ${cglib-jar} ${c3p0} commons-discovery dom4j ojdbc14 sitemesh
             taglibs-standard-impl taglibs-standard-jstlel taglibs-standard-spec
             xalan-j2 xalan-j2-serializer xerces-j2 ${common.jar.dependencies}" />

  <!-- =================== RPM build, use jpackage syntax ======================= -->
  <!-- property name="install.test.jar.dependencies"
      value="antlr checkstyle dom4j emma emma_ant jdom junit
             ${log4j-jars} mockobjects mockobjects-core mockobjects-jdk1.4-j2ee1.3
             regexp ${jmock-jars} strutstest" / -->

  <!-- SUSE extra dependencies: build and runtime -->
  <property name="suse-common-jars" value="jade4j jose4j salt-netapi-client spark-core spark-template-jade httpasyncclient simpleclient simpleclient_common simpleclient_hibernate simpleclient_servlet simpleclient_httpserver pgjdbc-ng/pgjdbc-ng pgjdbc-ng/spy netty/netty-common netty/netty-buffer netty/netty-resolver netty/netty-transport netty/netty-codec netty/netty-handler netty/netty-transport-native-unix-common java-saml java-saml-core joda-time woodstox-core-asl xmlsec stax2-api stax-api ${commons-jexl} ical4j ${product-common-jars}" />

  <!-- SUSE extra dependencies: runtime only -->
  <property name="suse-runtime-jars" value="${commons-lang} concurrentlinkedhashmap-lru
    slf4j/api log4j/log4j-slf4j-impl ${product-runtime-jars} jctools/jctools-core" />

  <property name="install.build.jar.dependencies"
      value="ant ant/ant-junit ${ant-contrib.path} antlr ${jasper-jars} ${test.build.jar.dependencies}
      ${install.common.jar.dependencies} xalan-j2" />

  <property name="install.run.jar.dependencies"
      value="antlr ${asm} ${cglib-jar} ${c3p0} commons-discovery dom4j sitemesh
             taglibs-standard-impl taglibs-standard-jstlel taglibs-standard-spec
             xalan-j2 xalan-j2-serializer xerces-j2 ${install.common.jar.dependencies}" />

  <property name="install.common.jar.dependencies"
      value="bcel ${cglib-jar} commons-beanutils commons-cli commons-codec
             commons-collections commons-digester commons-discovery
             commons-el commons-fileupload commons-io ${commons-lang} commons-logging ${commons-validator} ${hibernate6deps}
             ${commons-compress} ${tomcat-jars} ${javamail} jdom jsch
             ${log4j-jars} oro redstone-xmlrpc-client redstone-xmlrpc ${struts-jars}
             postgresql-jdbc ongres-scram/client ongres-scram/common
             ${stringprep-jars} taglibs-standard-impl taglibs-standard-jstlel
             taglibs-standard-spec quartz ${suse-common-jars} velocity-engine-core
             simple-core snakeyaml simple-xml ${commons-jexl}" />

  <property name="dist.jar.dependencies"
      value="antlr ${asm} bcel ${c3p0} ${cglib-jar}
             commons-collections commons-beanutils commons-cli commons-codec
             commons-digester commons-discovery commons-el commons-fileupload commons-io
             ${commons-lang} commons-logging ${commons-compress}
             ${commons-validator} dom4j ${hibernate6deps} ${jta-jars}
             ${jaf} ${jasper-jars} ${javamail} ${jaxb} jdom ${other-jars}
             ${tomcat-jars} ${log4j-jars} redstone-xmlrpc-client redstone-xmlrpc
             oro quartz sitemesh ${struts-jars}
             taglibs-standard-impl taglibs-standard-jstlel taglibs-standard-spec
             postgresql-jdbc ongres-scram/client ongres-scram/common ${stringprep-jars}
             snakeyaml simple-xml ${suse-common-jars} ${suse-runtime-jars}
	     xalan-j2 xalan-j2-serializer xerces-j2 simple-core" />

  <property name="taskomatic.jar.dependencies"
      value="${dist.jar.dependencies} jsch" />

  <path id="bootjars">
    <fileset dir="${boot.lib.dir}" includes="*.jar" />
  </path>

  <path id="testjars">
    <fileset dir="${test.lib.dir}" includes="*.jar" />
  </path>

  <path id="runjars">
    <fileset dir="${run.lib.dir}" includes="**/*.jar" />
  </path>

  <path id="buildjars">
    <path refid="testjars" />
    <fileset dir="${build.lib.dir}">
      <include name="*.jar" />
    </fileset>
        <pathelement location="${build.dir}/classes/"/>
  </path>

  <path id="alljars">
    <path refid="buildjars" />
    <path refid="runjars" />
  </path>

  <!-- =================== Deployment Properties ======================= -->
  <!-- Used for local dir deployment -->
  <property name="webapp.basedir"    value="${rhn-home}" />
  <property name="webapp.name"       value="rhnwebapp" />
  <property name="webapp.dir"        value="${webapp.basedir}/${webapp.name}" />

</project>
