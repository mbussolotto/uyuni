#!/usr/bin/perl
#
# Copyright (c) 2014--2015 Red Hat, Inc.
#
# This software is licensed to you under the GNU General Public License,
# version 2 (GPLv2). There is NO WARRANTY for this software, express or
# implied, including the implied warranties of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
# along with this software; if not, see
# http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
#
# Red Hat trademarks are not licensed under GPLv2. No permission is
# granted to use or replicate Red Hat trademarks that are incorporated
# in this software or its documentation.

use strict;
use Spacewalk::Setup;
use File::Spec;
use File::Copy;

use constant TOMCAT_JAVA_OPT_FILE => "tomcat_java_opts.conf";
use constant TOMCAT_JAVA_OPT_PATH =>
        File::Spec->catfile(Spacewalk::Setup::SHARED_DIR, TOMCAT_JAVA_OPT_FILE);

use constant TOMCAT_DIR =>  "/etc/tomcat/";
use constant TOMCAT_CONFIG_DIR =>
        File::Spec->catfile(TOMCAT_DIR, "conf.d/");

use constant TOMCAT_CONFIG_PATH => 
        File::Spec->catfile(TOMCAT_CONFIG_DIR, TOMCAT_JAVA_OPT_FILE);

sub setup_tomcat {

  mkdir(TOMCAT_CONFIG_DIR) unless(-d TOMCAT_CONFIG_DIR);
  copy(TOMCAT_JAVA_OPT_PATH, TOMCAT_CONFIG_PATH) 
    or die "Cannot copy ".TOMCAT_JAVA_OPT_PATH." in ".TOMCAT_CONFIG_PATH."\n";

  my $serverxmlfile = "".TOMCAT_DIR."/server.xml";
  {
    local $/ = undef;
    local *FILE;
    open FILE, '<', $serverxmlfile
      or die "Error opening [$serverxmlfile]: $!\n";
    my $serverxml_content_orig = <FILE>;
    close FILE;

    my $template = Spacewalk::Setup::SHARED_DIR . '/server.xml.xsl';
    my $serverxml_content = qx{/usr/bin/xsltproc $template $serverxmlfile};
    die "There was an error running xsltproc\n" if $?;
    if ($serverxml_content ne $serverxml_content_orig) {
      Spacewalk::Setup::backup_file($serverxmlfile =~ m!^(.+)/(.+)$!);

      open FILE, '>', $serverxmlfile
        or die "Error opening [$serverxmlfile]: $!\n";
      chmod 0644, $serverxmlfile;
      print FILE $serverxml_content;
      close FILE;
    }
  }

  my $web_patch = Spacewalk::Setup::SHARED_DIR."/web.xml.patch";
  my $command = "patch --silent --directory=".TOMCAT_DIR." --forward -p1 --input=$web_patch";
  system($command." --dry-run");
  if (not $?){
      Spacewalk::Setup::backup_file(TOMCAT_DIR, 'web.xml');

      system($command);
  }
  return;
}

setup_tomcat();

=head1 NAME

spacewalk-setup-tomcat - utility for configuring tomcat service to work with
Spacewalk / Satellite

=head1 SYNOPSIS

B<spacewalk-setup-tomcat>

=head1 DESCRIPTION

B<spacewalk-setup-tomcat> is a utility for configuring tomcat to work
with Spacewalk / Satellite. The script modifies existing tomcat configuration,
especially LD_LIBRARY_PATH, LD_PRELOAD and JAVA_OPTS variables, to work with
specified database backend.

Ordinarily, spacewalk-setup-tomcat is called by spacewalk-setup(1) during
initial Spacewalk / Satellite configuration or upgrade.

=head1 SEE ALSO

B<spacewalk-setup>(1) - Spacewalk setup program

=cut
